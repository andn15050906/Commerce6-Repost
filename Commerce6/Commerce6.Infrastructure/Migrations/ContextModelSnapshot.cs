// <auto-generated />
using System;
using Commerce6.Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Commerce6.Infrastructure.Migrations
{
    [DbContext(typeof(Context))]
    partial class ContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.14")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Commerce6.Data.Domain.AppUser.User", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("VARCHAR(45)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<int?>("AddressId")
                        .HasColumnType("int");

                    b.Property<string>("Avatar")
                        .HasColumnType("VARCHAR(100)");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("DATE");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("VARCHAR(45)");

                    b.Property<string>("Facebook")
                        .HasColumnType("VARCHAR(100)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(45)");

                    b.Property<bool>("IsConfirmed")
                        .HasColumnType("bit");

                    b.Property<DateTime>("JoinDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("LastSeen")
                        .HasColumnType("datetime2");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("VARCHAR(100)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("VARCHAR(100)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("VARCHAR(15)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("VARCHAR(100)");

                    b.Property<string>("RefreshToken")
                        .HasColumnType("VARCHAR(100)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("VARCHAR(15)");

                    b.Property<int?>("ShopId")
                        .HasColumnType("int");

                    b.Property<string>("Token")
                        .HasColumnType("VARCHAR(100)");

                    b.HasKey("Id");

                    b.HasIndex("AddressId");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.HasIndex("Phone")
                        .IsUnique();

                    b.HasIndex("ShopId")
                        .IsUnique()
                        .HasFilter("[ShopId] IS NOT NULL");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Commerce6.Data.Domain.Contact.Address", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("District")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(45)");

                    b.Property<string>("Province")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(45)");

                    b.Property<string>("Street")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(45)");

                    b.Property<string>("StreetNumber")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(45)");

                    b.HasKey("Id");

                    b.ToTable("Addresses");
                });

            modelBuilder.Entity("Commerce6.Data.Domain.Contact.Comment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(255)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CustomerId")
                        .HasColumnType("VARCHAR(45)");

                    b.Property<bool>("Hidden")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Path")
                        .HasColumnType("VARCHAR(45)");

                    b.Property<string>("ProductId")
                        .IsRequired()
                        .HasColumnType("VARCHAR(45)");

                    b.Property<int?>("ShopId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.HasIndex("ProductId");

                    b.HasIndex("ShopId");

                    b.ToTable("Comments");
                });

            modelBuilder.Entity("Commerce6.Data.Domain.Contact.Follow", b =>
                {
                    b.Property<int>("ShopId")
                        .HasColumnType("int");

                    b.Property<string>("UserId")
                        .HasColumnType("VARCHAR(45)");

                    b.HasKey("ShopId", "UserId");

                    b.HasIndex("UserId");

                    b.ToTable("Follows");
                });

            modelBuilder.Entity("Commerce6.Data.Domain.Contact.ProductReview", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Content")
                        .HasColumnType("NVARCHAR(255)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CustomerId")
                        .IsRequired()
                        .HasColumnType("VARCHAR(45)");

                    b.Property<DateTime>("ModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("ProductId")
                        .IsRequired()
                        .HasColumnType("VARCHAR(45)");

                    b.Property<int>("Rating")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.HasIndex("ProductId");

                    b.ToTable("ProductReviews");
                });

            modelBuilder.Entity("Commerce6.Data.Domain.Contact.ShopReview", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Content")
                        .HasColumnType("NVARCHAR(255)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CustomerId")
                        .IsRequired()
                        .HasColumnType("VARCHAR(45)");

                    b.Property<DateTime>("ModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("Rating")
                        .HasColumnType("int");

                    b.Property<int>("ShopId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.HasIndex("ShopId");

                    b.ToTable("ShopReviews");
                });

            modelBuilder.Entity("Commerce6.Data.Domain.Merchant.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Description")
                        .HasColumnType("NVARCHAR(255)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(45)");

                    b.Property<string>("Path")
                        .HasColumnType("VARCHAR(45)");

                    b.HasKey("Id");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("Commerce6.Data.Domain.Merchant.Product", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("VARCHAR(45)");

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("CountUnit")
                        .HasColumnType("NVARCHAR(45)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("NVARCHAR(1000)");

                    b.Property<double>("Discount")
                        .HasColumnType("float");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(100)");

                    b.Property<int>("Price")
                        .HasColumnType("int");

                    b.Property<int>("RatingCount")
                        .HasColumnType("int");

                    b.Property<string>("ServerTag")
                        .HasColumnType("NVARCHAR(45)");

                    b.Property<int?>("ShopCategoryId")
                        .HasColumnType("int");

                    b.Property<int>("ShopId")
                        .HasColumnType("int");

                    b.Property<int>("Sold")
                        .HasColumnType("int");

                    b.Property<int>("Stock")
                        .HasColumnType("int");

                    b.Property<int?>("ThumbImageId")
                        .HasColumnType("int");

                    b.Property<int>("TotalRating")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("ViewCount")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("ShopCategoryId");

                    b.HasIndex("ShopId");

                    b.HasIndex("ThumbImageId")
                        .IsUnique()
                        .HasFilter("[ThumbImageId] IS NOT NULL");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("Commerce6.Data.Domain.Merchant.ProductAttribute", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(45)");

                    b.Property<string>("ProductId")
                        .IsRequired()
                        .HasColumnType("VARCHAR(45)");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(45)");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.ToTable("ProductAttributes");
                });

            modelBuilder.Entity("Commerce6.Data.Domain.Merchant.ProductImage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasColumnType("VARCHAR(100)");

                    b.Property<int>("Position")
                        .HasColumnType("int");

                    b.Property<string>("ProductId")
                        .IsRequired()
                        .HasColumnType("VARCHAR(45)");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.ToTable("ProductImages");
                });

            modelBuilder.Entity("Commerce6.Data.Domain.Merchant.Promotion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasColumnType("VARCHAR(100)");

                    b.Property<int>("ShopId")
                        .HasColumnType("int");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("VARCHAR(100)");

                    b.HasKey("Id");

                    b.HasIndex("ShopId");

                    b.ToTable("Promotions");
                });

            modelBuilder.Entity("Commerce6.Data.Domain.Merchant.Shop", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("AddressId")
                        .HasColumnType("int");

                    b.Property<string>("Avatar")
                        .HasColumnType("VARCHAR(100)");

                    b.Property<string>("BankAccount")
                        .HasColumnType("VARCHAR(20)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("FollowerCount")
                        .HasColumnType("int");

                    b.Property<DateTime>("LastSeen")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(100)");

                    b.Property<string>("OwnerId")
                        .IsRequired()
                        .HasColumnType("VARCHAR(45)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("VARCHAR(15)");

                    b.Property<int>("ProductCount")
                        .HasColumnType("int");

                    b.Property<int>("RatingCount")
                        .HasColumnType("int");

                    b.Property<int>("TotalRating")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AddressId");

                    b.ToTable("Shops");
                });

            modelBuilder.Entity("Commerce6.Data.Domain.Merchant.ShopCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(45)");

                    b.Property<int?>("ShopId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ShopId");

                    b.ToTable("ShopCategories");
                });

            modelBuilder.Entity("Commerce6.Data.Domain.Sale.Order", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("VARCHAR(45)");

                    b.Property<DateTime?>("CompletedTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("CustomerId")
                        .HasColumnType("VARCHAR(45)");

                    b.Property<double>("Discount")
                        .HasColumnType("float");

                    b.Property<int>("Fee")
                        .HasColumnType("int");

                    b.Property<int?>("FromAddressId")
                        .HasColumnType("int");

                    b.Property<string>("PaymentMethod")
                        .IsRequired()
                        .HasColumnType("VARCHAR(45)");

                    b.Property<int>("Price")
                        .HasColumnType("int");

                    b.Property<int?>("ShopId")
                        .HasColumnType("int");

                    b.Property<string>("State")
                        .IsRequired()
                        .HasColumnType("VARCHAR(15)");

                    b.Property<int?>("ToAddressId")
                        .HasColumnType("int");

                    b.Property<string>("Transporter")
                        .IsRequired()
                        .HasColumnType("VARCHAR(45)");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.HasIndex("FromAddressId");

                    b.HasIndex("ShopId");

                    b.HasIndex("ToAddressId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("Commerce6.Data.Domain.Sale.Order_Product", b =>
                {
                    b.Property<string>("OrderId")
                        .HasColumnType("VARCHAR(45)");

                    b.Property<string>("ProductId")
                        .HasColumnType("VARCHAR(45)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("OrderId", "ProductId");

                    b.HasIndex("ProductId");

                    b.ToTable("Order_Products");
                });

            modelBuilder.Entity("Commerce6.Data.Domain.Statistics.OrderStatistics", b =>
                {
                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<int>("Count")
                        .HasColumnType("int");

                    b.HasKey("Date");

                    b.ToTable("OrderStatistics");
                });

            modelBuilder.Entity("Commerce6.Data.Domain.Statistics.ViewStatistics", b =>
                {
                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<int>("Count")
                        .HasColumnType("int");

                    b.HasKey("Date");

                    b.ToTable("ViewStatistics");
                });

            modelBuilder.Entity("Commerce6.Data.Domain.AppUser.User", b =>
                {
                    b.HasOne("Commerce6.Data.Domain.Contact.Address", "Address")
                        .WithMany()
                        .HasForeignKey("AddressId");

                    b.HasOne("Commerce6.Data.Domain.Merchant.Shop", "Shop")
                        .WithOne("Owner")
                        .HasForeignKey("Commerce6.Data.Domain.AppUser.User", "ShopId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("Address");

                    b.Navigation("Shop");
                });

            modelBuilder.Entity("Commerce6.Data.Domain.Contact.Comment", b =>
                {
                    b.HasOne("Commerce6.Data.Domain.AppUser.User", "Customer")
                        .WithMany()
                        .HasForeignKey("CustomerId");

                    b.HasOne("Commerce6.Data.Domain.Merchant.Product", "Product")
                        .WithMany("Comments")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Commerce6.Data.Domain.Merchant.Shop", "Shop")
                        .WithMany()
                        .HasForeignKey("ShopId");

                    b.Navigation("Customer");

                    b.Navigation("Product");

                    b.Navigation("Shop");
                });

            modelBuilder.Entity("Commerce6.Data.Domain.Contact.Follow", b =>
                {
                    b.HasOne("Commerce6.Data.Domain.Merchant.Shop", "Shop")
                        .WithMany()
                        .HasForeignKey("ShopId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Commerce6.Data.Domain.AppUser.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Shop");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Commerce6.Data.Domain.Contact.ProductReview", b =>
                {
                    b.HasOne("Commerce6.Data.Domain.AppUser.User", "Customer")
                        .WithMany()
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Commerce6.Data.Domain.Merchant.Product", "Product")
                        .WithMany("Reviews")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("Commerce6.Data.Domain.Contact.ShopReview", b =>
                {
                    b.HasOne("Commerce6.Data.Domain.AppUser.User", "Customer")
                        .WithMany()
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Commerce6.Data.Domain.Merchant.Shop", "Shop")
                        .WithMany("Reviews")
                        .HasForeignKey("ShopId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");

                    b.Navigation("Shop");
                });

            modelBuilder.Entity("Commerce6.Data.Domain.Merchant.Product", b =>
                {
                    b.HasOne("Commerce6.Data.Domain.Merchant.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Commerce6.Data.Domain.Merchant.ShopCategory", "ShopCategory")
                        .WithMany()
                        .HasForeignKey("ShopCategoryId");

                    b.HasOne("Commerce6.Data.Domain.Merchant.Shop", "Shop")
                        .WithMany("Products")
                        .HasForeignKey("ShopId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Commerce6.Data.Domain.Merchant.ProductImage", "ThumbImage")
                        .WithOne()
                        .HasForeignKey("Commerce6.Data.Domain.Merchant.Product", "ThumbImageId");

                    b.Navigation("Category");

                    b.Navigation("Shop");

                    b.Navigation("ShopCategory");

                    b.Navigation("ThumbImage");
                });

            modelBuilder.Entity("Commerce6.Data.Domain.Merchant.ProductAttribute", b =>
                {
                    b.HasOne("Commerce6.Data.Domain.Merchant.Product", "Product")
                        .WithMany("Attributes")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");
                });

            modelBuilder.Entity("Commerce6.Data.Domain.Merchant.ProductImage", b =>
                {
                    b.HasOne("Commerce6.Data.Domain.Merchant.Product", "Product")
                        .WithMany("Images")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");
                });

            modelBuilder.Entity("Commerce6.Data.Domain.Merchant.Promotion", b =>
                {
                    b.HasOne("Commerce6.Data.Domain.Merchant.Shop", "Shop")
                        .WithMany()
                        .HasForeignKey("ShopId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Shop");
                });

            modelBuilder.Entity("Commerce6.Data.Domain.Merchant.Shop", b =>
                {
                    b.HasOne("Commerce6.Data.Domain.Contact.Address", "Address")
                        .WithMany()
                        .HasForeignKey("AddressId");

                    b.Navigation("Address");
                });

            modelBuilder.Entity("Commerce6.Data.Domain.Merchant.ShopCategory", b =>
                {
                    b.HasOne("Commerce6.Data.Domain.Merchant.Shop", "Shop")
                        .WithMany()
                        .HasForeignKey("ShopId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("Shop");
                });

            modelBuilder.Entity("Commerce6.Data.Domain.Sale.Order", b =>
                {
                    b.HasOne("Commerce6.Data.Domain.AppUser.User", "Customer")
                        .WithMany()
                        .HasForeignKey("CustomerId");

                    b.HasOne("Commerce6.Data.Domain.Contact.Address", "FromAddress")
                        .WithMany()
                        .HasForeignKey("FromAddressId");

                    b.HasOne("Commerce6.Data.Domain.Merchant.Shop", "Shop")
                        .WithMany()
                        .HasForeignKey("ShopId");

                    b.HasOne("Commerce6.Data.Domain.Contact.Address", "ToAddress")
                        .WithMany()
                        .HasForeignKey("ToAddressId");

                    b.Navigation("Customer");

                    b.Navigation("FromAddress");

                    b.Navigation("Shop");

                    b.Navigation("ToAddress");
                });

            modelBuilder.Entity("Commerce6.Data.Domain.Sale.Order_Product", b =>
                {
                    b.HasOne("Commerce6.Data.Domain.Sale.Order", "Order")
                        .WithMany("Order_Products")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Commerce6.Data.Domain.Merchant.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Order");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("Commerce6.Data.Domain.Merchant.Product", b =>
                {
                    b.Navigation("Attributes");

                    b.Navigation("Comments");

                    b.Navigation("Images");

                    b.Navigation("Reviews");
                });

            modelBuilder.Entity("Commerce6.Data.Domain.Merchant.Shop", b =>
                {
                    b.Navigation("Owner");

                    b.Navigation("Products");

                    b.Navigation("Reviews");
                });

            modelBuilder.Entity("Commerce6.Data.Domain.Sale.Order", b =>
                {
                    b.Navigation("Order_Products");
                });
#pragma warning restore 612, 618
        }
    }
}
